/*
 * Copyright (c) 2023 Andrei Gaevskii
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEF 0
#define GMR 1
#define LWR 2
#define RSE 3
#define NUM 4
#define ADJ 5

&lt {
    quick_tap_ms = <200>;
};

&mt {
    quick_tap_ms = <200>;
};

/ {
    macros {
        mv_l_mc: mv_l_mc {
            label = "move_layer_macro";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &mo 4>
                , <&macro_press &kp LALT &kp LSHIFT>
                , <&macro_pause_for_release>
                , <&macro_release &kp LSHIFT &kp LALT>
                , <&macro_release &mo 4>
                ;
        };

        all_w: all_w {
            label = "all_windows";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LGUI>
                , <&macro_press &kp UP>
                , <&macro_release &kp LGUI &kp UP>
                ;
        };

    };

    behaviors {
        td0: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_0";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&mv_l_mc>, <&all_w>;
        };
    
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "homerow mods";
            #binding-cells = <2>;
            tapping_term_ms = <200>;
            flavor = "tap-preferred";
            bindings = <&mv_l_mc>, <&all_w>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp BSPC   &gresc      &kp Q   &kp W      &kp E        &kp R       &kp T      &kp Y       &kp U       &kp I       &kp O     &kp P      &kp LBKT        &kp BSPC
           &kp LSHFT   &kp A   &kp S      &kp D        &kp F       &kp G      &kp H       &kp J       &kp K       &kp L     &kp SEMI   &kp SQT
           &kp TAB     &kp Z   &kp X      &kp C        &kp V       &kp B      &kp N       &kp M       &kp COMMA   &kp DOT   &kp FSLH   &kp BSPC
                               &hm A B    &kp LALT     &lt 2 RET   &kp LGUI   &kp LCTRL   &kp SPACE   &mo 3       &mo 4
            >;
        };

        gaming_layer {
            bindings = <
&kp BSPC   &gresc      &kp Q   &kp W   &kp E        &kp R         &kp T      &kp Y       &kp U       &kp I       &kp O     &kp P      &kp LBKT        &kp BSPC
           &kp LSHFT   &kp A   &kp S   &kp D        &kp F         &kp G      &kp H       &kp J       &kp K       &kp L     &kp SEMI   &kp SQT
           &kp TAB     &kp Z   &kp X   &kp C        &kp V         &kp B      &kp N       &kp M       &kp COMMA   &kp DOT   &kp FSLH   &kp BSPC
                               &mo 3   &kp LALT     &lt 2 SPACE   &kp LGUI   &kp LCTRL   &kp SPACE   &mo 3       &mo 4
            >;
        };


        lower_layer {
            bindings = <
&kp DEL   &gresc       &kp F1     &kp F2   &kp F3     &kp F4     &kp F5      &kp F6      &kp F7      &kp F8     &kp F9      &kp F10    &kp F11           &mt RGUI F12
          &kp LSHIFT   &kp EXCL   &kp AT   &kp HASH   &kp DLLR   &kp PRCNT   &kp CARET   &kp AMPS    &kp STAR   &kp LPAR    &kp RPAR   &mt RCTRL MINUS
          &kp TAB      &kp N1     &kp N2   &kp N3     &kp N4     &kp N5      &kp N6      &kp N7      &kp N8     &kp N9      &kp N0     &trans
                                  &trans   &trans     &trans     &trans      &trans      &kp SPACE   &trans     &lt 5 RET
            >;
        };

        raise_layer {
            bindings = <
&kp DEL   &gresc       &kp C_NEXT   &kp C_BRI_UP   &kp LBRC   &kp EQUAL   &kp RBRC    &kp C_VOL_UP   &kp PG_UP   &trans      &kp HOME    &kp INS           &kp CAPS          &kp BSPC
          &kp LSHIFT   &kp C_PP     &trans         &kp LPAR   &kp MINUS   &kp RPAR    &kp LEFT       &kp DOWN    &kp UP      &kp RIGHT   &kp C_MUTE        &mt RCTRL K_APP
          &kp TAB      &kp C_PREV   &kp C_BRI_DN   &kp LBKT   &kp BSLH    &kp RBKT    &kp C_VOL_DN   &kp PG_DN   &kp PSCRN   &kp END     &kp PAUSE_BREAK   &trans
                                    &tog 1         &trans     &trans      &trans      &trans         &trans      &trans      &trans
            >;
        };

        num_layer {
            bindings = <
&kp DEL   &gresc       &trans   &kp N7   &kp N8   &kp N9   &kp T    &kp C_VOL_UP   &kp PG_UP   &trans      &kp HOME    &kp P             &kp CAPS          &kp BSPC
          &kp LSHIFT   &trans   &kp N4   &kp N5   &kp N6   &kp G    &kp DOWN       &kp LEFT    &kp UP      &kp RIGHT   &trans            &mt RCTRL K_APP
          &kp TAB      &kp N0   &kp N1   &kp N2   &kp N3   &kp B    &kp C_VOL_DN   &kp PG_DN   &kp PSCRN   &kp END     &kp PAUSE_BREAK   &trans
                                &trans   &trans   &trans   &trans   &trans         &trans      &trans      &trans
            >;
        };

        adjust_layer {
            bindings = <
&none  &bootloader         &none         &none         &none         &none         &none           &none         &none         &none         &none         &none  &bootloader  &none
        &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0   &bt BT_CLR
        &sys_reset         &none         &none         &none         &none         &none           &none         &none         &none         &none         &none   &sys_reset
                                         &none        &trans         &none        &trans          &trans         &none        &trans         &none
            >;
        };
    };
};
